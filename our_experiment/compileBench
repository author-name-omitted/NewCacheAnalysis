#!/usr/bin/env bash


SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if [ $# -le 0 ];
then
    echo "Test case is not set, using default: \"binarysearch\""
    testcases="$SCRIPT_DIR"/lab2/0507_2c_ly/binarysearch_jfdctint
else
    testcases=$1 
fi


WORKDIR="$testcases"/build
rm -rf "$WORKDIR" && mkdir -p "$WORKDIR"

chown vscode:vscode -R "$WORKDIR"
cd "$WORKDIR" || exit
# chmod 0744 "$WORKDIR" || exit

clang -w -S -gline-tables-only -O0 -Xclang \
        -disable-O0-optnone -fno-builtin \
        -target arm -march=armv4t \
        -mfloat-abi=hard \
        -emit-llvm "$testcases"/*.c 

llvm-link *.ll "$SCRIPT_DIR"/libraries/arm/builtininteger.ll \
                   "$SCRIPT_DIR"/libraries/arm/builtinstd.ll \
                   -o unoptimized.ll

opt -S unoptimized.ll \
    -mem2reg -indvars -loop-simplify -instcombine -globaldce -dce \
    -o optimized.ll
# clang -w -S -gline-tables-only -O0 -Xclang -disable-O0-optnone -fno-builtin \
#     -mfloat-abi=hard -emit-llvm \
#     /workspaces/llvmta/testcases/"$testcases"/*.c
# llc optimized.ll -filetype=obj -o optimized.o

# clang optimized.o -o my_executable

# gdb -tui --args llvmta -disable-tail-calls -float-abi=hard -mattr=-neon,+vfp2 -O0 \
# --ta-analysis-entry-point=main --ta-muarch-type=inorder \
# --ta-memory-type=separatecaches --ta-strict=false \
# --ta-loop-bounds-file=\
# "/workspaces/llvmta/testcases/Benchmarks/$testcases/LoopAnnotations_Arm|NotOptimized|HardFloat.csv" \
# --ta-num-callsite-tokens=1 optimized.ll

# echo "Doing post cleaning: rm -rf $WORKDIR"
# rm -rf "$WORKDIR"
# exit 0